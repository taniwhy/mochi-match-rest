// Code generated by MockGen. DO NOT EDIT.
// Source: entry_history_usecase.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
	output "github.com/taniwhy/mochi-match-rest/domain/models/output"
	reflect "reflect"
)

// MockIEntryHistoryUseCase is a mock of IEntryHistoryUseCase interface
type MockIEntryHistoryUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockIEntryHistoryUseCaseMockRecorder
}

// MockIEntryHistoryUseCaseMockRecorder is the mock recorder for MockIEntryHistoryUseCase
type MockIEntryHistoryUseCaseMockRecorder struct {
	mock *MockIEntryHistoryUseCase
}

// NewMockIEntryHistoryUseCase creates a new mock instance
func NewMockIEntryHistoryUseCase(ctrl *gomock.Controller) *MockIEntryHistoryUseCase {
	mock := &MockIEntryHistoryUseCase{ctrl: ctrl}
	mock.recorder = &MockIEntryHistoryUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIEntryHistoryUseCase) EXPECT() *MockIEntryHistoryUseCaseMockRecorder {
	return m.recorder
}

// GetByID mocks base method
func (m *MockIEntryHistoryUseCase) GetByID(c *gin.Context) ([]*output.EntryHistoryResBody, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", c)
	ret0, _ := ret[0].([]*output.EntryHistoryResBody)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID
func (mr *MockIEntryHistoryUseCaseMockRecorder) GetByID(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockIEntryHistoryUseCase)(nil).GetByID), c)
}
